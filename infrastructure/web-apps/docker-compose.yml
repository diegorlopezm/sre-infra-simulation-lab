version: '3.8'

services:
  # App 1 - Blog con formulario de contacto
  blog-app:
    build: ./blog-app
    container_name: blog-app
    environment:
      - DATABASE_URL=postgresql://blog_user:blog_pass@blog-db:5432/blog_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - blog-db
      - redis
    ports:
      - "5001:5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blog.rule=Host(`blog.localhost`)"

  # App 2 - API REST para gesti√≥n de tareas
  # api-app:
  #   build: ./api-app
  #   container_name: api-app
  #   environment:
  #     - DATABASE_URL=postgresql://api_user:api_pass@api-db:5432/api_db
  #   ports:
  #     - "5001:5000"
  #   deploy:
  #     replicas: 2
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.api.rule=Host(`api.localhost`)"

  # Bases de datos
  blog-db:
    image: postgres:15
    container_name: blog-db
    environment:
      POSTGRES_DB: blog_db
      POSTGRES_USER: blog_user
      POSTGRES_PASSWORD: blog_pass
    volumes:
      - blog-data:/var/lib/postgresql/data
      - ./init-scripts/blog-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init-scripts/seed-data.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    ports:
      - "5432:5432"

  # api-db:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: api_db
  #     POSTGRES_USER: api_user
  #     POSTGRES_PASSWORD: api_pass
  #   volumes:
  #     - api-data:/var/lib/postgresql/data
  #     - ./init-scripts/api-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
  #   ports:
  #     - "5433:5432"

  # Cache
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

volumes:
  blog-data:
  api-data:
  redis-data: